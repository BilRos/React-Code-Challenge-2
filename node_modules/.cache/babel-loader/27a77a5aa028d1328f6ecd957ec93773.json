{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/billy/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotCard.js\";\nimport React from \"react\"; //import axios from 'axios'\n\nconst botTypeClasses = {\n  Assault: \"icon military\",\n  Defender: \"icon shield\",\n  Support: \"icon plus circle\",\n  Medic: \"icon ambulance\",\n  Witch: \"icon magic\",\n  Captain: \"icon star\"\n};\n\nfunction BotCard({\n  bot,\n  handleSelect,\n  deleteBot\n}) {\n  const {\n    id,\n    avatar_url,\n    bot_class,\n    catchphrase,\n    health,\n    damage,\n    armor\n  } = bot;\n\n  function handleDelete() {\n    axiosfetc.delete(`http://localhost:8002/bots/${id}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status >= 200 && res.status < 300) {\n        deleteBot(bot);\n      } else {\n        throw new Error('Error was encontered when removing bot');\n      }\n    }).catch(error => console.error(error, 'Failed to remove bot'));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui column\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui card\",\n      onClick: () => handleSelect(bot),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"oh no!\",\n          src: avatar_url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: [bot.name, /*#__PURE__*/_jsxDEV(\"i\", {\n            className: botTypeClasses[bot.bot_class]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"meta text-wrap\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: catchphrase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"extra content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon heartbeat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), health]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon lightning\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), damage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"icon shield\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), armor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ui center aligned segment basic\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ui mini red button\",\n              onClick: handleDelete,\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, bot.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = BotCard;\nexport default BotCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotCard\");","map":{"version":3,"sources":["/home/billy/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotCard.js"],"names":["React","botTypeClasses","Assault","Defender","Support","Medic","Witch","Captain","BotCard","bot","handleSelect","deleteBot","id","avatar_url","bot_class","catchphrase","health","damage","armor","handleDelete","axiosfetc","delete","headers","then","res","status","Error","catch","error","console","name"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import axios from 'axios'\n\nconst botTypeClasses = {\n  Assault: \"icon military\",\n  Defender: \"icon shield\",\n  Support: \"icon plus circle\",\n  Medic: \"icon ambulance\",\n  Witch: \"icon magic\",\n  Captain: \"icon star\",\n};\n\nfunction BotCard({ bot , handleSelect, deleteBot }) {\n  const {id, avatar_url, bot_class, catchphrase, health, damage, armor} = bot\n\n  function handleDelete(){\n    axiosfetc.delete(`http://localhost:8002/bots/${id}`, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    .then((res)=> {\n      if(res.status >= 200 && res.status < 300){\n        deleteBot(bot)\n      } else {\n        throw new Error('Error was encontered when removing bot')\n      }\n    })\n    .catch(error =>\n    console.error(error, 'Failed to remove bot')); \n  }\n\n  return (\n    <div className=\"ui column\">\n      <div\n        className=\"ui card\"\n        key={bot.id}\n        onClick={()=>handleSelect(bot)}\n      >\n        <div className=\"image\">\n          <img alt=\"oh no!\" src={avatar_url} />\n        </div>\n        <div className=\"content\">\n          <div className=\"header\">\n            {bot.name}\n            <i className={botTypeClasses[bot.bot_class]} />\n          </div>\n          <div className=\"meta text-wrap\">\n            <small>{catchphrase}</small>\n          </div>\n        </div>\n        <div className=\"extra content\">\n          <span>\n            <i className=\"icon heartbeat\" />\n            {health}\n          </span>\n\n          <span>\n            <i className=\"icon lightning\" />\n            {damage}\n          </span>\n          <span>\n            <i className=\"icon shield\" />\n            {armor}\n          </span>\n          <span>\n            <div className=\"ui center aligned segment basic\">\n              <button\n                className=\"ui mini red button\"\n                onClick={handleDelete}\n              >\n                x\n              </button>\n            </div>\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default BotCard;\n"]},"metadata":{},"sourceType":"module"}